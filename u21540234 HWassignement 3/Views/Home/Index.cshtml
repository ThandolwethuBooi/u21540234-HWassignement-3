@model u21540234_HWassignement_3.Models.studbookviewmodel
@{
	ViewBag.Title = "Home Page";
}
@using PagedList;
@using PagedList.Mvc;

<body class="bg-dark text-light">
	<div class="container">
		<div>
			<h2> Students </h2>
			<p>
				<button class="btn btn-secondary" id="createButton" data-url="@Url.Action("Create", "students")">Add New Students</button>
			</p>
			<table class="table table-dark table-striped table table-dark table-striped table-bordered border-dark">
				<thead>
					<tr>
						<th>
							Name
						</th>
						<th>
							Surname
						</th>
						<th>
							Birthdate
						</th>
						<th>
							Gender
						</th>
						<th>
							Class
						</th>
						<th>
							Point
						</th>

					</tr>

				</thead>

				<tbody>
					@foreach (var students in Model.students)
					{
						<tr>
							<td>
								@students.name
							</td>
							<td>
								@students.surname
							</td>
							<td>
								@students.birthdate.ToString()
							</td>
							<td>
								@students.gender
							</td>
							<td>
								@Html.DisplayFor(modelItem => students.@class)
							</td>
							<td>
								@students.point
							</td>

						</tr>


					}
				</tbody>
			</table>
			@Html.PagedListPager(Model.students,
			page => Url.Action("Index",
			new
			{
				pageStudents = page,
				pageBooks = Request.QueryString["pageBooks"]


			}),
			new PagedListRenderOptions
			{
				UlElementClasses = new[] { "pagination" },
				LiElementClasses = new[] { "page-item", "mx-4" },
				
				LinkToPreviousPageFormat = "Previous",
				LinkToNextPageFormat = "Next",
				LinkToFirstPageFormat = "First",
				LinkToLastPageFormat = "Last",
				DisplayLinkToFirstPage = PagedListDisplayMode.Always,
				DisplayLinkToLastPage = PagedListDisplayMode.Always,
				DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
				DisplayLinkToNextPage = PagedListDisplayMode.Always,
				Display = PagedListDisplayMode.IfNeeded,
				
				DisplayEllipsesWhenNotShowingAllPageNumbers = true

			}

			)
		</div>

		<div>
			<h2> Books </h2>
			<p>
				<button class="btn btn-secondary" id="createButton" data-url="@Url.Action("Create", "books")">Add New Book</button>


			</p>
			<table class="table table-dark table-striped table-bordered border-dark">
				<thead>
					<tr>
						<th>
							Name
						</th>
						<th>
							Page Count
						</th>
						<th>
							Point
						</th>
						<th>
							Author Name
						</th>
						<th>
							Book Type
						</th>
						<th>Status</th>
					</tr>
				</thead>

				<tbody>
					@foreach (var books in Model.books)
					{

						<tr>
							<td>
								@Html.DisplayFor(modelItem => books.name)
							</td>
							<td>
								@Html.DisplayFor(modelItem => books.pagecount)
							</td>
							<td>
								@Html.DisplayFor(modelItem => books.point)
							</td>
							<td>
								@books.author.name @books.author.surname
							</td>
							<td>
								@Html.DisplayFor(modelItem => books.type.name)
							</td>

							@{
								var status = Model.borrows.Any(b => b.bookId == books.bookId);
								var result = status ? "Out" : "Available";
								<td>@result</td>

							}


						</tr>
					}
				</tbody>

			</table>
			@Html.PagedListPager(Model.books,
		page => Url.Action("Index",
		new
		{
			pagebooks = page,
			pageStudents = Request.QueryString["pageStudents"]


		}),
		new PagedListRenderOptions
		{
			UlElementClasses = new[] { "pagination" },
			LiElementClasses = new[] { "page-item", "mx-4" },
			
			LinkToPreviousPageFormat = "Previous",
			LinkToNextPageFormat = "Next",
			LinkToFirstPageFormat = "First",
			LinkToLastPageFormat = "Last",
			DisplayLinkToFirstPage = PagedListDisplayMode.Always,
			DisplayLinkToLastPage = PagedListDisplayMode.Always,
			DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
			DisplayLinkToNextPage = PagedListDisplayMode.Always,
			Display = PagedListDisplayMode.IfNeeded,

			DisplayEllipsesWhenNotShowingAllPageNumbers = true

		}

		)

		</div>

	</div>





	<div id="myModal" class="modal fade" tabindex="-1">
		<div class="modal-dialog text-dark">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title"> Library Admin</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body" id="modal-content">
				</div>
			</div>
		</div>
	</div>

	@section scripts{
		<script>
			$(function () {

				$(document).on("click", " #createButton", function (e) {
					e.preventDefault();
					var url = $(this).data("url");
					console.log(url);

					$.get(url, function (data) {
						$("#modal-content").empty();
						$("#modal-content").html(data);
						$("#myModal").modal("show");
					});
				});


				$("#modal-content").on("submit", "form", function (e) {
					e.preventDefault();
					var form = $(this);
					var url = form.attr("action");
					var formData = form.serialize();

					$.post(url, formData, function (data) {

						$("#myModal").modal("hide");
						location.reload();
					});
				});
			});
		</script>
	}
</body>